This program takes an input string as a command-line argument,
computes the SHA-256 hash of the string using the OpenSSL library 
functions, and prints the resulting hash in hexadecimal format.




#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <openssl/sha.h>

int main(int argc, char *argv[]) {
    if (argc != 2) {
        printf("Usage: %s <input string>\n", argv[0]);
        return 1;
    }

    unsigned char hash[SHA256_DIGEST_LENGTH];
    SHA256_CTX ctx;
    SHA256_Init(&ctx);
    SHA256_Update(&ctx, argv[1], strlen(argv[1]));
    SHA256_Final(hash, &ctx);

    printf("SHA256 hash of '%s':\n", argv[1]);
    for (int i = 0; i < SHA256_DIGEST_LENGTH; i++) {
        printf("%02x", hash[i]);
    }
    printf("\n");

    return 0;
}




To compile and run the program, you'll need to link against the OpenSSL library.
On Linux or macOS, you can use the following command.



gcc -o sha256 sha256.c -lcrypto
./sha256 "input string"




On Windows, you can use the following command:


gcc -o sha256 sha256.c -l libcrypto -L C:\OpenSSL-Win64\lib
sha256 "input string"




(Note that the OpenSSL library must be installed and its header files and library files must be accessible to the compiler.)



